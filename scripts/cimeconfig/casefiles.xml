<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="config_definition.xsl" ?>

<case_files>

  <file name="env_case.xml">
    <header>
      ========================================================================== 
      These variables CANNOT BE CHANGED once a case has been created.      
      Invoke create_newcase again if a different grid or component         
      combination is required.                                             
      ==========================================================================
    </header>
    <groups>
      <group>case_def</group>
      <group>case_desc</group>
      <group>case_comp</group>
      <group>case_mach</group>
      <group>case_der</group>
      <group>case_last</group>
    </groups>
  </file>

  <file name ="env_run.xml">
    <header>
      ========================================================================== 
      These variables MAY BE CHANGED ANYTIME during a run.                 
      Additional machine speific variables that can be changed             
      during a run are contained in the env_mach_specific file             
      
      Note1: users SHOULD NOT modify BUILD_COMPETE in env_build.xml        
      this is done automatically by the scripts                     
      ========================================================================== 
    </header>
    <groups>
      <group>run_desc</group>
      <group>run_start</group>
      <group>run_stop</group>
      <group>run_rest</group>
      <group>run_coupling</group>
      <group>run_mpi</group>
      <group>run_pio</group>
      <group>run_flags</group>
      <group>run_cplhist</group>
      <group>run_mach</group>
      <group>run_din</group>
      <group>run_dout</group>
      <group>run_sstice</group>
      <group>run_cesm</group>
      <group>run_domain</group>
      <group>run_dirderv</group>
      <group>run_defpts</group>
      <group>run_component_datm</group>
      <group>run_component_dice</group>
      <group>run_component_dlnd</group>
      <group>run_component_docn</group>
      <group>run_component_drof</group>
      <group>run_component_cam</group>
      <group>run_component_clm</group>
      <group>run_component_cice</group>
      <group>run_component_pop</group>
      <group>run_component_cism</group>
      <group>run_component_rtm</group>
      <group>run_component_vic</group>
    </groups>
  </file>

  <file name="env_build.xml">
    <header>
      ========================================================================== 
      These variables SHOULD NOT be changed once the model has been built. 
      Currently, these variables are not cached.                           
      Note1: users SHOULD NOT modify BUILD_COMPETE below                   
      this is done automatically by the scripts                     
      ========================================================================== 
    </header>
    <groups>
      <group>build_macros</group>
      <group>build_def</group>
      <group>build_component_cam</group>
      <group>build_component_clm</group>
      <group>build_component_cice</group>
      <group>build_component_pop</group>
      <group>build_component_cism</group>
      <group>build_component_rtm</group>
      <group>build_component_vic</group>
      <group>build_status</group>
      <group>build_grid</group>
      <group>build_derived</group>
    </groups>
  </file>

  <file name="env_mach_pes.xml">
    <header>
      ========================================================================== 
      These variables CANNOT be modified once cesm_setup has been           
      invoked without first invoking cesm_setup -clean.                     
      
      component task/thread settings                                             
      if the user wants to change the values below after ./cesm_setup, run       
      ./cesm_setup -clean                                                     
      ./cesm_setup                                                            
      to reset the pes for the run                                              
      
      NTASKS are the total number of MPI tasks                                  
      NTHRDS are the number of OpenMP threads per MPI task                        
      ROOTPE is the global mpi task associated with the root task               
      of that component                                                       
      PSTRID is the stride of MPI tasks across the global                       
      set of pes (for now this is set to 1)                              
      NINST is the number of instances of the component (will be spread         
      evenly across NTASKS)                                               
      
      for example, for a setting with                                             
      NTASKS = 8                                                              
      NTHRDS = 2                                                              
      ROOTPE = 32                                                             
      NINST  = 2                                                              
      the MPI tasks would be placed starting on global pe 32                    
      and each pe would be threaded 2-ways for this component.                    
      These tasks will be divided amongst both instances (4 tasks each).        
      
      Note: PEs that support threading never have an MPI task associated        
      with them for performance reasons.  As a result, NTASKS and ROOTPE      
      are relatively independent of NTHRDS and they determine                 
      the layout of mpi processors between components.  NTHRDS is used        
      to determine how those mpi tasks should be placed across the machine.   
      
      The following values should not be set by the user since they'll be        
      overwritten by scripts.                                                   
      TOTALPES                                                                
      CCSM_PCOST                                                              
      CCSM_ESTCOST                                                            
      PES_LEVEL                                                               
      MAX_TASKS_PER_NODE                                                      
      PES_PER_NODE                                                            
      CCSM_TCOST                                                              
      CCSM_ESTCOST                                                            
      
      The user can copy env_mach_pes.xml from another run, but they'll need to  
      do the following                                                          
      ./cesm_setup -clean                                                     
      ./cesm_setup                                                            
      ./CASE.build                                                            
      ========================================================================== 
    </header>
    <groups>
      <group>mach_pes_def</group> 
      <group>mach_pes_desc</group> 
      <group>mach_pes_atm</group> 
      <group>mach_pes_lnd</group>
      <group>mach_pes_ice</group> 
      <group>mach_pes_ocn</group> 
      <group>mach_pes_cpl</group> 
      <group>mach_pes_glc</group> 
      <group>mach_pes_rof</group>
      <group>mach_pes_wav</group> 
      <group>mach_pes_stride</group> 
      <group>mach_pes_last</group>
    </groups>
  </file>

  <file name="env_archive.xml">
    <header>
      ========================================================================== 
      These are the variables specific to the short and long term          
      archivers, and the variable time series file generation.             
      We recommend that users *NEVER* run diagnostics                      
      or post-processing packages in the same location as the short-term   
      (DOUT_S_ROOT.locked) archiver when the model job is running.         
      Instead, You may run these packages in the (DOUT_S_ROOT)             
      location which contains hard-links back to the files in the          
      (DOUT_S_ROOT.locked) directory.                                      
      For a detailed listing of the env_archive.xml file, run              
      ./st_archive -help                                                   
      To validate the env_archive.xml file using xmllint, run              
      xmllint -schema ./Tools/config_archive.xsd env_archive.xml           
      ========================================================================== 
    </header>
    <groups>
      <group>archive</group>
    </groups>
  </file>

  <file name="env_test.xml">
    <header>
      ========================================================================== 
      These are the variables specific to a test case.                     
      ========================================================================== 
    </header>
    <groups>
      <group>case_test</group>
    </groups>
  </file>

</case_files>
